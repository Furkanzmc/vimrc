snippet anchorall "Anchors"
anchors {
	top: ${1:top}
	left: ${2:left}
	right: ${3:right}
	bottom: ${4:bottom}
}
endsnippet

snippet anchorhor "Horizontal Anchors"
anchors {
	left: ${1:left}
	right: ${2:right}
}
endsnippet

snippet anchorver "Vertical Anchors"
anchors {
	top: ${1:top}
	bottom: ${2:bottom}
}
endsnippet

snippet states "States"
states: [
	State {
		name: "${1:name}"

		PropertyChanges { target: ${2:target}; ${3:/*Changes*/} }
	}
]
endsnippet

snippet transitions "Transitions"
transitions: [
	Transition {
		from: "${1:from}"
		to: "${2:to}"

		${3:/*Animations*/}
	}
]
endsnippet

snippet prop "property ..."
property ${1:type} ${2:name}: ${3:value}
endsnippet

snippet alias "property alias ..."
property alias ${1:name}: ${2:value}
endsnippet

snippet Qt.po "Qt.point"
Qt.point(${1:x}, ${2:y})
endsnippet

snippet Qt.si "Qt.size"
Qt.size(${1:width}, ${2:height})
endsnippet

snippet sig "signal ..."
signal ${1:name}(${VISUAL}$0)
endsnippet

snippet enum "enum ..."
enum ${1:name} {
	${2:First},
	${3:Second}
}
endsnippet

snippet priv "Declare QtObject"
QtObject {
	id: privates

	${1:/*Properties*/}
}
endsnippet

snippet func "Declare Function"
function ${1:name}(${2}) {

}
endsnippet

snippet log "console.log"
console.log(${VISUAL}$0)
endsnippet

snippet error "console.error"
console.error(${VISUAL}$0)
endsnippet

snippet assert "console.assert"
console.assert(${1:cond}, "${2:msg}")
endsnippet

snippet time "console.time"
console.time("${1:identifier}")
${VISUAL}$0
console.time("${2:$1}")
endsnippet

# Item Snippets

snippet initqml "Create a default QML file"
import QtQuick ${1:2}.${2:10}

/*!
    \qmltype ${3:TypeName}
	\brief ${4:Brief description}
 */
${5:Item} {
	id: root
}
endsnippet

snippet Item "Basic Item Definition"
Item {
	id: ${1:identifier}

	${2:/*Children*/}
}
endsnippet

snippet Binding "Binding on..."
Binding on ${1:property} {
	when: ${2:condition}
	value: ${3:value}
}
endsnippet

snippet Behavior "Behavior on..."
Behavior on ${1:property} {
	${2:/*Animations*/}
}
endsnippet

snippet ListView "ListView"
ListView {
	id: ${1:identifier}
	delegate: ${2:delegate}
	model: ${3:model}
}
endsnippet

snippet Repeater "Repeater"
Repeater {
	id: ${1:identifier}
	delegate: ${2:delegate}
	model: ${3:model}
}
endsnippet

snippet oncompl "Component.onCompleted"
Component.onCompleted: {
	${VISUAL}$0
}
endsnippet

snippet MouseArea "MouseArea"
MouseArea {
    id: ${1:identifier}

	${VISUAL}$0
}
endsnippet

# vim:ft=snippets:
